.. index:: pair: class; ugcs::vsm::Param_exception
.. _doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception:

template class ugcs::vsm::Param_exception
=========================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`Exception <doxid-de/de2/classugcs_1_1vsm_1_1_exception>` class with one parameter. :ref:`More...<details-d4/dff/classugcs_1_1vsm_1_1_param__exception>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <exception.h>
	
	template <typename Dummy = void, typename TParam = int>
	class Param_exception: public :ref:`ugcs::vsm::Exception<doxid-de/de2/classugcs_1_1vsm_1_1_exception>`
	{
	public:
		// fields
	
		TParam :ref:`param<doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1a2309844f51d943c56061e8e6a00e84be>`;

		// construction
	
		:ref:`Param_exception<doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1a98caa80955f834089beae6607090e76c>`(:ref:`Va_args_overload<doxid-de/d6e/structugcs_1_1vsm_1_1_exception_1_1_va__args__overload>`, const char* msg, ...);
	
		:target:`Param_exception<doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1ab8de8ed8edbc3c6f8d6c7c3a639e50bc>`(
			:ref:`Va_list_overload<doxid-d2/ded/structugcs_1_1vsm_1_1_exception_1_1_va__list__overload>`,
			const char* msg,
			va_list args
			);
	
		:target:`Param_exception<doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1aebf4cb8ef5ebd099921d15bf6ac202b3>`(
			:ref:`Va_args_overload<doxid-de/d6e/structugcs_1_1vsm_1_1_exception_1_1_va__args__overload>`,
			const TParam& param,
			const char* msg,
			...
			);
	
		:target:`Param_exception<doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1a7629401bc60aa48129ac834f5089d46b>`(
			:ref:`Va_list_overload<doxid-d2/ded/structugcs_1_1vsm_1_1_exception_1_1_va__list__overload>`,
			const TParam& param,
			const char* msg,
			va_list args
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// structs
	
		struct :ref:`Va_args_overload<doxid-de/d6e/structugcs_1_1vsm_1_1_exception_1_1_va__args__overload>`;
		struct :ref:`Va_list_overload<doxid-d2/ded/structugcs_1_1vsm_1_1_exception_1_1_va__list__overload>`;

		// methods
	
		virtual const char* :ref:`what<doxid-de/de2/classugcs_1_1vsm_1_1_exception_1a83c915c0abe10d4da6bed0ed67680b18>`() const;

.. _details-d4/dff/classugcs_1_1vsm_1_1_param__exception:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`Exception <doxid-de/de2/classugcs_1_1vsm_1_1_exception>` class with one parameter.

If you need more than one parameter then wrap them into class and specify the class here.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- TParam

		- Type for exception parameter.

	*
		- Dummy

		- Type used for differentiating exception types signatures.

Fields
------

.. index:: pair: variable; param
.. _doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1a2309844f51d943c56061e8e6a00e84be:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	TParam param

User-defined parameter.

Construction
------------

.. index:: pair: function; Param_exception
.. _doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception_1a98caa80955f834089beae6607090e76c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Param_exception(:ref:`Va_args_overload<doxid-de/d6e/structugcs_1_1vsm_1_1_exception_1_1_va__args__overload>`, const char* msg, ...)

Different constructors for optionally taking the parameter value and formatted message.

