.. index:: pair: class; ugcs::vsm::mavlink::Checksum
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum:

class ugcs::vsm::mavlink::Checksum
==================================

.. toctree::
	:hidden:

	struct_ugcs_vsm_mavlink_Checksum_Exception_dummy_struct.rst
	struct_ugcs_vsm_mavlink_Checksum_Invalid_id_exception_dummy_struct.rst

Overview
~~~~~~~~

Mavlink compatible checksum (ITU X.25/SAE AS-4 hash) calculation class. :ref:`More...<details-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <mavlink.h>
	
	class Checksum
	{
	public:
		// typedefs
	
		typedef :ref:`ugcs::vsm::Param_exception<doxid-d4/dff/classugcs_1_1vsm_1_1_param__exception>`<:ref:`Exception_dummy_struct<doxid-da/d58/structugcs_1_1vsm_1_1mavlink_1_1_checksum_1_1_exception__dummy__struct>`,> :target:`Exception<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a4022ecc5cf0672925bcb99787800a9b8>`;
		typedef :ref:`ugcs::vsm::Derived_exception<doxid-dd/dbf/classugcs_1_1vsm_1_1_derived__exception>`<:ref:`Exception<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a4022ecc5cf0672925bcb99787800a9b8>`, :ref:`Invalid_id_exception_dummy_struct<doxid-dd/dad/structugcs_1_1vsm_1_1mavlink_1_1_checksum_1_1_invalid__id__exception__dummy__struct>`> :ref:`Invalid_id_exception<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1ad73311b4f26805479db771d19784031d>`;

		// structs
	
		struct :ref:`Exception_dummy_struct<doxid-da/d58/structugcs_1_1vsm_1_1mavlink_1_1_checksum_1_1_exception__dummy__struct>`;
		struct :ref:`Invalid_id_exception_dummy_struct<doxid-dd/dad/structugcs_1_1vsm_1_1mavlink_1_1_checksum_1_1_invalid__id__exception__dummy__struct>`;

		// construction
	
		:ref:`Checksum<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a8bb2a3a467c9ac0c8f563cf32635942d>`();
		:ref:`Checksum<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a6f93dcb8f141086dfde698a76b58b3b9>`(const void* buffer, size_t len);
		:ref:`Checksum<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1af10ef5f7e580ceafcc280c51f06f37ca>`(const :ref:`Io_buffer::Ptr<doxid-d1/d0f/classugcs_1_1vsm_1_1_io__buffer_1a538a51ee0b037d1ebc88b5d25dfac361>`& buffer);

		// methods
	
		uint16_t :ref:`Accumulate<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a9af61587495eeae7751f67afa61ccc06>`(const void* buffer, size_t len);
		uint16_t :ref:`Accumulate<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a0bb17d8af876f2dafd7feb6d91ffd461>`(const :ref:`Io_buffer::Ptr<doxid-d1/d0f/classugcs_1_1vsm_1_1_io__buffer_1a538a51ee0b037d1ebc88b5d25dfac361>`& buffer);
		uint16_t :ref:`Accumulate<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a75b417aff84d45cf5089dd4607d2ea16>`(uint8_t byte);
		uint16_t :ref:`Get<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1ae4676f9b7e2164a69c67f54eaee2cad7>`() const;
		void :ref:`Reset<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a72c6f169a3acc7a74bc3510ea848c82b>`();
	
		static uint16_t :ref:`Calculate<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a94331e5b30b8abde1be0589624b6b7ee>`(
			const void* buffer,
			size_t len,
			uint16_t* accumulator = nullptr
			);
	
		static bool :ref:`Get_extra_byte_length_pair<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1adb13ab51c2930b4e6723e65564513024>`(:ref:`MESSAGE_ID_TYPE<doxid-d3/d55/namespaceugcs_1_1vsm_1_1mavlink_1a30f251ed942b4f043ec4948e2d9ae1a3>` message_id, :ref:`Extra_byte_length_pair<doxid-d3/d55/namespaceugcs_1_1vsm_1_1mavlink_1a965da12d9ea3e8b047202da751f104fd>`& ret, const :ref:`Extension<doxid-d9/dda/classugcs_1_1vsm_1_1mavlink_1_1_extension>`& ext = :ref:`Extension::Get<doxid-d9/dda/classugcs_1_1vsm_1_1mavlink_1_1_extension_1a88cf8e1c0239a83ff2b9edaeb4693bbc>`());
	};
.. _details-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Mavlink compatible checksum (ITU X.25/SAE AS-4 hash) calculation class.

It can be used statically to calculate checksum of arbitrary buffer, or used as an instance to incrementally accumulate checksum for multiple buffers.

Typedefs
--------

.. index:: pair: typedef; Invalid_id_exception
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1ad73311b4f26805479db771d19784031d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`ugcs::vsm::Derived_exception<doxid-dd/dbf/classugcs_1_1vsm_1_1_derived__exception>`<:ref:`Exception<doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a4022ecc5cf0672925bcb99787800a9b8>`, :ref:`Invalid_id_exception_dummy_struct<doxid-dd/dad/structugcs_1_1vsm_1_1mavlink_1_1_checksum_1_1_invalid__id__exception__dummy__struct>`> Invalid_id_exception

Definition of a new exception type.

Construction
------------

.. index:: pair: function; Checksum
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a8bb2a3a467c9ac0c8f563cf32635942d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Checksum()

Instance initialized with initial checksum value for empty buffer.

.. index:: pair: function; Checksum
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a6f93dcb8f141086dfde698a76b58b3b9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Checksum(const void* buffer, size_t len)

Instance initialized and checksum is calculated based on provided buffer.

.. index:: pair: function; Checksum
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1af10ef5f7e580ceafcc280c51f06f37ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Checksum(const :ref:`Io_buffer::Ptr<doxid-d1/d0f/classugcs_1_1vsm_1_1_io__buffer_1a538a51ee0b037d1ebc88b5d25dfac361>`& buffer)

Instance initialized and checksum is calculated based on provided buffer.

Methods
-------

.. index:: pair: function; Accumulate
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a9af61587495eeae7751f67afa61ccc06:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	uint16_t Accumulate(const void* buffer, size_t len)

Incrementally calculate the checksum of a new buffer and accumulate it to the current value.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- buffer

		- Byte buffer.

	*
		- len

		- Size of the buffer.



.. rubric:: Returns:

New checksum value.

.. index:: pair: function; Accumulate
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a0bb17d8af876f2dafd7feb6d91ffd461:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	uint16_t Accumulate(const :ref:`Io_buffer::Ptr<doxid-d1/d0f/classugcs_1_1vsm_1_1_io__buffer_1a538a51ee0b037d1ebc88b5d25dfac361>`& buffer)

Incrementally calculate the checksum of a new buffer and accumulate it to the current value.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- buffer

		- Byte buffer.



.. rubric:: Returns:

New checksum value.

.. index:: pair: function; Accumulate
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a75b417aff84d45cf5089dd4607d2ea16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	uint16_t Accumulate(uint8_t byte)

Incrementally calculate the checksum of one new byte and accumulate it to the current value.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- byte

		- byte.



.. rubric:: Returns:

New checksum value.

.. index:: pair: function; Get
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1ae4676f9b7e2164a69c67f54eaee2cad7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	uint16_t Get() const

Get current checksum value.

.. index:: pair: function; Reset
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a72c6f169a3acc7a74bc3510ea848c82b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void Reset()

Reset checksum to initial seed value for zero-length buffer.

.. index:: pair: function; Calculate
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1a94331e5b30b8abde1be0589624b6b7ee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static uint16_t Calculate(
		const void* buffer,
		size_t len,
		uint16_t* accumulator = nullptr
		)

Calculate checksum either incrementally or from initial seed value.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- buffer

		- Byte buffer.

	*
		- len

		- Size of the buffer.

	*
		- accumulator

		- If not *nullptr*, then incremental calculation is made, otherwise initial seed value is used.



.. rubric:: Returns:

Calculated checksum value.

.. index:: pair: function; Get_extra_byte_length_pair
.. _doxid-da/d94/classugcs_1_1vsm_1_1mavlink_1_1_checksum_1adb13ab51c2930b4e6723e65564513024:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static bool Get_extra_byte_length_pair(:ref:`MESSAGE_ID_TYPE<doxid-d3/d55/namespaceugcs_1_1vsm_1_1mavlink_1a30f251ed942b4f043ec4948e2d9ae1a3>` message_id, :ref:`Extra_byte_length_pair<doxid-d3/d55/namespaceugcs_1_1vsm_1_1mavlink_1a965da12d9ea3e8b047202da751f104fd>`& ret, const :ref:`Extension<doxid-d9/dda/classugcs_1_1vsm_1_1mavlink_1_1_extension>`& ext = :ref:`Extension::Get<doxid-d9/dda/classugcs_1_1vsm_1_1mavlink_1_1_extension_1a88cf8e1c0239a83ff2b9edaeb4693bbc>`())

Get CRC extra byte and expected payload length of a specific Mavlink message type.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- Invalid_id_exception

		- for unknown Mavlink messages.

	*
		- message_id

		- Mavlink message id.

	*
		- ret

		- [out] CRC extra byte and length pair :ref:`mavlink::Extra_byte_length_pair <doxid-d3/d55/namespaceugcs_1_1vsm_1_1mavlink_1a965da12d9ea3e8b047202da751f104fd>`.

	*
		- ext

		- :ref:`Extension <doxid-d9/dda/classugcs_1_1vsm_1_1mavlink_1_1_extension>` the message belongs to.



.. rubric:: Returns:

false if message_id is not recognized.

