.. index:: pair: class; ugcs::vsm::Io_request
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request:

class ugcs::vsm::Io_request
===========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Base request for I/O operations. :ref:`More...<details-d8/dbb/classugcs_1_1vsm_1_1_io__request>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <io_request.h>
	
	class Io_request: public :ref:`ugcs::vsm::Request_container::Request<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request>`
	{
	public:
		// typedefs
	
		typedef std::shared_ptr<Io_request> :ref:`Ptr<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9b14e2f98e56cbeed5c7ba3549b62541>`;
		typedef std::weak_ptr<Io_request> :ref:`Weak_ptr<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a7035a3fa1d2d68386e573b18f07e641d>`;

		// construction
	
		:ref:`Io_request<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9c92249af5587c2075d50a1f3c80170b>`(:ref:`Io_stream::Ptr<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1adb1bb7a5387d65f5cd701bf65705c966>` stream, :ref:`Io_stream::Offset<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1a30574fccaad9e587c15270e3fa3d5925>` offset, :ref:`Io_result<doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712>`& result_arg);

		// methods
	
		template <typename... Args>
		static :ref:`Ptr<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9b14e2f98e56cbeed5c7ba3549b62541>` :ref:`Create<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1afbe0847c147b122f2304c194c31d1887>`(Args&&... args);
	
		:ref:`Io_stream::Ptr<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1adb1bb7a5387d65f5cd701bf65705c966>` :ref:`Get_stream<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a288efc949f7f694f1e83e6362e7122a4>`() const;
		:ref:`Io_stream::Offset<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1a30574fccaad9e587c15270e3fa3d5925>`& :ref:`Offset<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9b85802445bef2cdbabc7485c532bc9a>`();
		void :ref:`Set_result_arg<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a31c437229e18062f6cce1379f4c4ce28>`(:ref:`Io_result<doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712>` result, const :ref:`Request::Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`& lock = :ref:`Request::Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`());
		:ref:`Io_result<doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712>` :ref:`Get_last_result<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1ad858dcc92c55a1e163f9347595d423a2>`();
	};

	// direct descendants

	class :ref:`Read_request<doxid-d1/d78/classugcs_1_1vsm_1_1_read__request>`;
	class :ref:`Write_request<doxid-d4/df0/classugcs_1_1vsm_1_1_write__request>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef std::shared_ptr<:ref:`Request<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request>`> :ref:`Ptr<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9fc856a23cf576b01649cabc8a6ce3ec>`;
		typedef std::weak_ptr<:ref:`Request<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request>`> :ref:`Weak_ptr<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a45dfe7161da322165c89d41f02977a20>`;
		typedef :ref:`Callback_base<doxid-dc/d4f/classugcs_1_1vsm_1_1_callback__base>`<void>:::ref:`Ptr<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9fc856a23cf576b01649cabc8a6ce3ec>`<> :ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`;
		typedef std::unique_lock<std::mutex> :ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`;

		// enums
	
		enum :ref:`Status<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a7e8d9e205f783c829fcb5bdda00f6f76>`;

		// methods
	
		template <typename... Args>
		static :ref:`Ptr<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9fc856a23cf576b01649cabc8a6ce3ec>` :ref:`Create<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a342da78756478193a27cc412074fb79f>`(Args&&... args);
	
		void :ref:`Set_processing_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a755601a56afa809b62bc7d011f951d15>`(const :ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`& handler);
		void :ref:`Set_processing_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a249b5d2c020ce28f7e3ac65383dae8b7>`(:ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`&& handler);
		void :ref:`Set_completion_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a12ec980ffc633959aed0359cd42536b8>`(const :ref:`Request_container::Ptr<doxid-d3/d1f/classugcs_1_1vsm_1_1_request__container_1a369d2f23ce01b27fe6ffe39de81e49c6>`& context, const :ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`& handler);
		void :ref:`Set_completion_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a561379a2b3407dbc62c971d84c7f371a>`(const :ref:`Request_container::Ptr<doxid-d3/d1f/classugcs_1_1vsm_1_1_request__container_1a369d2f23ce01b27fe6ffe39de81e49c6>`& context, :ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`&& handler);
		void :ref:`Set_cancellation_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1aeb438d485dfabe3e4b665f67b3558fc9>`(const :ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`& handler);
		void :ref:`Set_cancellation_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a56a55660d8e9d10b7eb3a58a39176949>`(:ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`&& handler);
		void :ref:`Set_done_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a5fe368011c095bd0f00f2b752bab24f4>`(:ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`& handler);
		void :ref:`Set_done_handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a010c1aa35213206c8f35c3ad209ff699>`(:ref:`Handler<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a9d12ba30446f777d927b21e1332f9744>`&& handler);
		:ref:`Request_container::Ptr<doxid-d3/d1f/classugcs_1_1vsm_1_1_request__container_1a369d2f23ce01b27fe6ffe39de81e49c6>` :ref:`Get_completion_context<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a5b0f2d53ac73c2a65816dcd85ac7fdfc>`(:ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>` locker = :ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`()) const;
		void :ref:`Process<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a8a139feb0121215d25eca6948aca0bcd>`(bool process_request);
		void :ref:`Complete<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a38c68dcf1ed20975e2a2c25ac1610d40>`(:ref:`Status<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a7e8d9e205f783c829fcb5bdda00f6f76>` status = :ref:`Status::OK<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a7e8d9e205f783c829fcb5bdda00f6f76ae0aa021e21dddbd6d8cecec71e9cf564>`, :ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>` locker = :ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`());
		void :ref:`Cancel<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a2ab0ebd9dc403ab769f81003a7bc66e0>`(:ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>` locker = :ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`());
		void :ref:`Abort<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a68ac123b4c30999676a92bfb505fb769>`(:ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>` locker = :ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`());
		:ref:`Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>` :ref:`Lock<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1af06238bd09e7b1343a4bae79db112bd7>`(bool acquire = true) const;
		:ref:`Status<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a7e8d9e205f783c829fcb5bdda00f6f76>` :ref:`Get_status<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1ad301ad9a0cf52a0dfcbb76ff48b2a1cb>`() const;
		bool :ref:`Is_completed<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1afcf3c907ea9bce798e52703e21488cfb>`() const;
		bool :ref:`Is_request_processing_needed<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a1ac36ba2cb811ae1089b3b9d062e6b24>`() const;
		bool :ref:`Is_aborted<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a8a1a29ee4cee0ff96b529d6720a794bf>`() const;
		bool :ref:`Is_processing<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95d63a0765f8d76c8ed68993f8e0baf5>`() const;
		bool :ref:`Is_completion_delivered<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a8c61ba14b174a9d251bd120d235d08e9>`() const;
		bool :ref:`Is_completion_delivering_started<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a7a973a7fbb99e0eb94236c476bc52e8c>`() const;
		bool :ref:`Is_done<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1aaa6b4915a3771b1fe37656fd221a963b>`() const;
	
		bool :ref:`Wait_done<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1aaf0304a3925911d23eda340d0a67946e>`(
			bool process_ctx = true,
			std::chrono::milliseconds timeout = std::chrono::milliseconds::zero()
			);
	
		bool& :ref:`Timed_out<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a23d56ffa57d15acbcf427d15140b9596>`();

.. _details-d8/dbb/classugcs_1_1vsm_1_1_io__request:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Base request for I/O operations.

Typedefs
--------

.. index:: pair: typedef; Ptr
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9b14e2f98e56cbeed5c7ba3549b62541:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef std::shared_ptr<Io_request> Ptr

Pointer type.

.. index:: pair: typedef; Weak_ptr
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a7035a3fa1d2d68386e573b18f07e641d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef std::weak_ptr<Io_request> Weak_ptr

Pointer type.

Construction
------------

.. index:: pair: function; Io_request
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9c92249af5587c2075d50a1f3c80170b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Io_request(:ref:`Io_stream::Ptr<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1adb1bb7a5387d65f5cd701bf65705c966>` stream, :ref:`Io_stream::Offset<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1a30574fccaad9e587c15270e3fa3d5925>` offset, :ref:`Io_result<doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712>`& result_arg)

Construct I/O request.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- stream

		- Related I/O stream instance.

	*
		- offset

		- Offset for I/O operation if applicable. If the target channel does not support the seeking this parameter is ignored. If the stream is responsible for keeping current offset it should check real offset when request is handled.

	*
		- result_arg

		- Reference to result value which is passed as argument to the user provided completion handler.

Methods
-------

.. index:: pair: function; Create
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1afbe0847c147b122f2304c194c31d1887:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename... Args>
	static :ref:`Ptr<doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9b14e2f98e56cbeed5c7ba3549b62541>` Create(Args&&... args)

Create an instance.

.. index:: pair: function; Get_stream
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a288efc949f7f694f1e83e6362e7122a4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Io_stream::Ptr<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1adb1bb7a5387d65f5cd701bf65705c966>` Get_stream() const

Locks and gets the associated stream.

.. index:: pair: function; Offset
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a9b85802445bef2cdbabc7485c532bc9a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Io_stream::Offset<doxid-d7/dc6/classugcs_1_1vsm_1_1_io__stream_1a30574fccaad9e587c15270e3fa3d5925>`& Offset()

Get I/O operation offset value.

.. index:: pair: function; Set_result_arg
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1a31c437229e18062f6cce1379f4c4ce28:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void Set_result_arg(:ref:`Io_result<doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712>` result, const :ref:`Request::Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`& lock = :ref:`Request::Locker<doxid-d2/d26/classugcs_1_1vsm_1_1_request__container_1_1_request_1a95f0c7399b31760677f1a147adad2801>`())

Sets the result argument.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- result

		- Resutl value to set.

	*
		- lock

		- If present, should be the already acquired lock for the request (will not be unlocked by the method), otherwise new lock is acquired and released inside the method.

.. index:: pair: function; Get_last_result
.. _doxid-d8/dbb/classugcs_1_1vsm_1_1_io__request_1ad858dcc92c55a1e163f9347595d423a2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Io_result<doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712>` Get_last_result()

Get the most recently set result value.

XXX Return :ref:`Io_result::OTHER_FAILURE <doxid-dd/def/namespaceugcs_1_1vsm_1a0e37a17f83be9c1d2f04595f500a5712ae0aa021e21dddbd6d8cecec71e9cf564>` if the result value was never set.

